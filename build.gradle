import net.minecraftforge.gradle.common.util.MavenArtifactDownloader

buildscript {
    apply from: 'https://raw.githubusercontent.com/noeppi-noeppi/ModUtils/v2/buildscript.gradle', to: buildscript
}

apply from: 'https://raw.githubusercontent.com/noeppi-noeppi/ModUtils/v2/mod.gradle'

apply plugin: 'io.github.noeppi_noeppi.tools.modgradle.javadoc'
apply plugin: 'io.github.noeppi_noeppi.tools.modgradle.mergeartifact'
apply plugin: 'io.github.noeppi_noeppi.tools.modgradle.coremods'

repositories {
    maven { url = 'https://maven.melanx.de' }
    maven { url = 'https://noeppi-noeppi.github.io/MinecraftUtilities/maven' }
}

dependencies {
    annotationProcessor "io.github.noeppi_noeppi.tools:LibXAP:${project.ap_version}"
    implementation "io.github.noeppi_noeppi.tools:LibXAP:${project.ap_version}"
    coremods 'io.github.noeppi_noeppi.misc:CoreModTypes:5.0.1-1'
}

mergeArtifacts {
    include "io.github.noeppi_noeppi.tools:LibXAP:${project.ap_version}"
}

javadocConfigure {
    exclude '**.impl.*?'
    exclude '**.annotation.processor.*?'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.destinationDirectory(file("build/docs/javadoc"))
    title("LibX ${base_version} JavaDoc")
    options.windowTitle("LibX ${base_version} JavaDoc")
    options.header('<h3><a href="https://www.curseforge.com/minecraft/mc-mods/libx" target="_blank">CurseForge</a>' \
            + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' \
            + '<a href="https://github.com/noeppi-noeppi/LibX" target="_blank">GitHub</a></h2>')
    options.memberLevel = JavadocMemberLevel.PROTECTED
}

task javadocMeta(type: Javadoc) {
    source file('src/main/java')
    destinationDir file('build/docs/meta')
    classpath = compileJava.classpath
    options.doclet('io.github.noeppi_noeppi.tools.java_doclet_meta.Main')
    options.docletpath(MavenArtifactDownloader.download(project, 'io.github.noeppi_noeppi.tools:JavaDocletMeta:0.0.1:fatjar', false))
}

// Performs checks for releases
task release {
    finalizedBy compileJava
    
    doFirst {
        compileJava.options.compilerArgs += [
                '-Amod.properties.release=true'
        ]
    }
}