{"name":"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeExtension","simpleName":"RecipeExtension","sourceName":"io.github.noeppi_noeppi.libx.data.provider.recipe.RecipeExtension","modifiers":["public","abstract"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"methods":[{"name":"provider","modifiers":["public","abstract"],"typeId":"()io.github.noeppi_noeppi.libx.data.provider.recipe.RecipeProviderBase","parameters":[],"return":{"name":"io.github.noeppi_noeppi.libx.data.provider.recipe.RecipeProviderBase","desc":"Lio/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase;","binaryName":"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase"},"doc":{"summary":"Gets the <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref> for this extension.","text":"Gets the <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref> for this extension."}},{"name":"consumer","modifiers":["public","abstract"],"typeId":"()java.util.function.Consumer<net.minecraft.data.recipes.FinishedRecipe>","parameters":[],"return":{"name":"java.util.function.Consumer<net.minecraft.data.recipes.FinishedRecipe>","desc":"Ljava/util/function/Consumer;","binaryName":"java/util/function/Consumer"},"doc":{"summary":"Gets the <ref cls=\"java/util/function/Consumer\">Consumer</ref> for <ref cls=\"net/minecraft/data/recipes/FinishedRecipe\">finished recipes</ref> to add recipes to.","text":"Gets the <ref cls=\"java/util/function/Consumer\">Consumer</ref> for <ref cls=\"net/minecraft/data/recipes/FinishedRecipe\">finished recipes</ref> to add recipes to."}},{"name":"criterion","modifiers":["public","abstract"],"typeId":"(net.minecraft.world.level.ItemLike)net.minecraft.advancements.CriterionTriggerInstance","parameters":[{"name":"item","type":{"name":"net.minecraft.world.level.ItemLike","desc":"Lnet/minecraft/world/level/ItemLike;","binaryName":"net/minecraft/world/level/ItemLike"}}],"return":{"name":"net.minecraft.advancements.CriterionTriggerInstance","desc":"Lnet/minecraft/advancements/CriterionTriggerInstance;","binaryName":"net/minecraft/advancements/CriterionTriggerInstance"},"doc":{"summary":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> for the given <ref cls=\"net/minecraft/world/level/ItemLike\">item</ref>.","text":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> for the given <ref cls=\"net/minecraft/world/level/ItemLike\">item</ref>."}},{"name":"criterion","modifiers":["public","abstract"],"typeId":"(net.minecraft.tags.TagKey<net.minecraft.world.item.Item>)net.minecraft.advancements.CriterionTriggerInstance","parameters":[{"name":"item","type":{"name":"net.minecraft.tags.TagKey<net.minecraft.world.item.Item>","desc":"Lnet/minecraft/tags/TagKey;","binaryName":"net/minecraft/tags/TagKey"}}],"return":{"name":"net.minecraft.advancements.CriterionTriggerInstance","desc":"Lnet/minecraft/advancements/CriterionTriggerInstance;","binaryName":"net/minecraft/advancements/CriterionTriggerInstance"},"doc":{"summary":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> for the given <ref cls=\"net/minecraft/tags/Tag\">tag</ref>.","text":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> for the given <ref cls=\"net/minecraft/tags/Tag\">tag</ref>."}},{"name":"criterion","modifiers":["public","abstract"],"typeId":"(net.minecraft.advancements.critereon.ItemPredicate[])net.minecraft.advancements.CriterionTriggerInstance","parameters":[{"name":"items","type":{"name":"net.minecraft.advancements.critereon.ItemPredicate[]","arrayOf":{"name":"net.minecraft.advancements.critereon.ItemPredicate","desc":"Lnet/minecraft/advancements/critereon/ItemPredicate;","binaryName":"net/minecraft/advancements/critereon/ItemPredicate"}}}],"return":{"name":"net.minecraft.advancements.CriterionTriggerInstance","desc":"Lnet/minecraft/advancements/CriterionTriggerInstance;","binaryName":"net/minecraft/advancements/CriterionTriggerInstance"},"vararg":true,"doc":{"summary":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> that requires all of the given  <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">items</ref>.","text":"Builds an <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">advancement criterion</ref> that requires all of the given  <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">items</ref>."}},{"name":"criteria","modifiers":["public","default"],"typeId":"(net.minecraft.world.item.crafting.Ingredient)java.util.List<net.minecraft.advancements.CriterionTriggerInstance>","parameters":[{"name":"item","type":{"name":"net.minecraft.world.item.crafting.Ingredient","desc":"Lnet/minecraft/world/item/crafting/Ingredient;","binaryName":"net/minecraft/world/item/crafting/Ingredient"}}],"return":{"name":"java.util.List<net.minecraft.advancements.CriterionTriggerInstance>","desc":"Ljava/util/List;","binaryName":"java/util/List"},"doc":{"summary":"Gets a list of criteria that should be ORed, meaning that the recipe should unlock when one of  them is completed instead of all of them.","text":"Gets a list of criteria that should be ORed, meaning that the recipe should unlock when one of  them is completed instead of all of them."}}],"doc":{"summary":"A recipe extension is an interface that provides logic for a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref>.","text":"A recipe extension is an interface that provides logic for a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref>. Custom recipe  extension should extend this interface and then add default methods to be used in <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\" method=\"setup\" type=\"()void\">RecipeProviderBase#setup()</ref>.  As <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref> implements this interface as well, the abstract methods are then filled with logic.  <br> Additionally, a recipe extension class can define a <code>public</code> <code>static</code> method named <code>setup</code> that  takes a <ref cls=\"io/github/noeppi_noeppi/libx/mod/ModX\">ModX</ref> and an extension with the same type as the class that defines the method. When  a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/recipe/RecipeProviderBase\">RecipeProviderBase</ref> implements that extension, it'll call that setup method during setup."}}
