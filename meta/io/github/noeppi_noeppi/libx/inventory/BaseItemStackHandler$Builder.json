{"name":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder","simpleName":"Builder","sourceName":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","modifiers":["public","static"],"nesting":"member","superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"methods":[{"name":"contentsChanged","modifiers":["public"],"typeId":"(java.lang.Runnable)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"action","type":{"name":"java.lang.Runnable","desc":"Ljava/lang/Runnable;","binaryName":"java/lang/Runnable"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Adds an action that runs whenever the contents of the inventory change.","text":"Adds an action that runs whenever the contents of the inventory change."}},{"name":"contentsChanged","modifiers":["public"],"typeId":"(java.util.function.Consumer<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"action","type":{"name":"java.util.function.Consumer<java.lang.Integer>","desc":"Ljava/util/function/Consumer;","binaryName":"java/util/function/Consumer"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Adds an action that runs whenever the contents of the inventory change.","text":"Adds an action that runs whenever the contents of the inventory change. The action  will get passed the slot that was changed."}},{"name":"output","modifiers":["public"],"typeId":"(int[])io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"int[]","arrayOf":{"name":"int","desc":"I"}}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"vararg":true,"doc":{"summary":"Marks the given slots as outputs.","text":"Marks the given slots as outputs. That means it's not possible to insert items  into these slots. Marking a slot as insertion only and output at the same time<br> will cause an exception."}},{"name":"output","modifiers":["public"],"typeId":"(java.util.Set<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"java.util.Set<java.lang.Integer>","desc":"Ljava/util/Set;","binaryName":"java/util/Set"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Marks the given slots as outputs.","text":"Marks the given slots as outputs. That means it's not possible to insert items  into these slots. Marking a slot as insertion only and output at the same time<br> will cause an exception."}},{"name":"output","modifiers":["public"],"typeId":"(com.google.common.collect.Range<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"com.google.common.collect.Range<java.lang.Integer>","desc":"Lcom/google/common/collect/Range;","binaryName":"com/google/common/collect/Range"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Marks the given slots as outputs.","text":"Marks the given slots as outputs. That means it's not possible to insert items  into these slots. Marking a slot as insertion only and output at the same time<br> will cause an exception."}},{"name":"insertionOnly","modifiers":["public"],"typeId":"(int[])io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"int[]","arrayOf":{"name":"int","desc":"I"}}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"vararg":true,"doc":{"summary":"Marks the given slots as insertion only.","text":"Marks the given slots as insertion only. That means it's not possible to extract  items from these slots. Marking a slot as insertion only and output at the same<br> time will cause an exception."}},{"name":"insertionOnly","modifiers":["public"],"typeId":"(java.util.Set<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"java.util.Set<java.lang.Integer>","desc":"Ljava/util/Set;","binaryName":"java/util/Set"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Marks the given slots as insertion only.","text":"Marks the given slots as insertion only. That means it's not possible to extract  items from these slots. Marking a slot as insertion only and output at the same<br> time will cause an exception."}},{"name":"insertionOnly","modifiers":["public"],"typeId":"(com.google.common.collect.Range<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slots","type":{"name":"com.google.common.collect.Range<java.lang.Integer>","desc":"Lcom/google/common/collect/Range;","binaryName":"com/google/common/collect/Range"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Marks the given slots as insertion only.","text":"Marks the given slots as insertion only. That means it's not possible to extract  items from these slots. Marking a slot as insertion only and output at the same<br> time will cause an exception."}},{"name":"defaultSlotLimit","modifiers":["public"],"typeId":"(int)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"defaultSlotLimit","type":{"name":"int","desc":"I"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Sets the default maximum stack size for the item handler.","text":"Sets the default maximum stack size for the item handler."}},{"name":"slotLimit","modifiers":["public"],"typeId":"(int,int[])io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slotLimit","type":{"name":"int","desc":"I"}},{"name":"slots","type":{"name":"int[]","arrayOf":{"name":"int","desc":"I"}}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"vararg":true,"doc":{"summary":"Sets a maximum stack size for some slots.","text":"Sets a maximum stack size for some slots."}},{"name":"slotLimit","modifiers":["public"],"typeId":"(int,java.util.Set<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slotLimit","type":{"name":"int","desc":"I"}},{"name":"slots","type":{"name":"java.util.Set<java.lang.Integer>","desc":"Ljava/util/Set;","binaryName":"java/util/Set"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Sets a maximum stack size for some slots.","text":"Sets a maximum stack size for some slots."}},{"name":"slotLimit","modifiers":["public"],"typeId":"(int,com.google.common.collect.Range<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"slotLimit","type":{"name":"int","desc":"I"}},{"name":"slots","type":{"name":"com.google.common.collect.Range<java.lang.Integer>","desc":"Lcom/google/common/collect/Range;","binaryName":"com/google/common/collect/Range"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Sets a maximum stack size for some slots.","text":"Sets a maximum stack size for some slots."}},{"name":"validator","modifiers":["public"],"typeId":"(java.util.function.Predicate<net.minecraft.world.item.ItemStack>,int[])io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"validator","type":{"name":"java.util.function.Predicate<net.minecraft.world.item.ItemStack>","desc":"Ljava/util/function/Predicate;","binaryName":"java/util/function/Predicate"}},{"name":"slots","type":{"name":"int[]","arrayOf":{"name":"int","desc":"I"}}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"vararg":true,"doc":{"summary":"Sets a slot validator for some slots.","text":"Sets a slot validator for some slots."}},{"name":"validator","modifiers":["public"],"typeId":"(java.util.function.Predicate<net.minecraft.world.item.ItemStack>,java.util.Set<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"validator","type":{"name":"java.util.function.Predicate<net.minecraft.world.item.ItemStack>","desc":"Ljava/util/function/Predicate;","binaryName":"java/util/function/Predicate"}},{"name":"slots","type":{"name":"java.util.Set<java.lang.Integer>","desc":"Ljava/util/Set;","binaryName":"java/util/Set"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Sets a slot validator for some slots.","text":"Sets a slot validator for some slots."}},{"name":"validator","modifiers":["public"],"typeId":"(java.util.function.Predicate<net.minecraft.world.item.ItemStack>,com.google.common.collect.Range<java.lang.Integer>)io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","parameters":[{"name":"validator","type":{"name":"java.util.function.Predicate<net.minecraft.world.item.ItemStack>","desc":"Ljava/util/function/Predicate;","binaryName":"java/util/function/Predicate"}},{"name":"slots","type":{"name":"com.google.common.collect.Range<java.lang.Integer>","desc":"Lcom/google/common/collect/Range;","binaryName":"com/google/common/collect/Range"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler.Builder","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler$Builder"},"doc":{"summary":"Sets a slot validator for some slots.","text":"Sets a slot validator for some slots."}},{"name":"build","modifiers":["public"],"typeId":"()io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler","parameters":[],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.BaseItemStackHandler","desc":"Lio/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler;","binaryName":"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler"},"doc":{"summary":"Build the item handler.","text":"Build the item handler."}}],"doc":{"summary":"Builder for a <ref cls=\"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler\">BaseItemStackHandler</ref>","text":"Builder for a <ref cls=\"io/github/noeppi_noeppi/libx/inventory/BaseItemStackHandler\">BaseItemStackHandler</ref>"}}
