{"name":"io/github/noeppi_noeppi/libx/inventory/IAdvancedItemHandler","simpleName":"IAdvancedItemHandler","sourceName":"io.github.noeppi_noeppi.libx.inventory.IAdvancedItemHandler","modifiers":["public","abstract"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"interfaces":[{"name":"net/minecraftforge/items/IItemHandler","signature":"net.minecraftforge.items.IItemHandler","parameters":[]}],"methods":[{"name":"insertItem","modifiers":["public","default"],"typeId":"(net.minecraft.world.item.ItemStack,boolean)net.minecraft.world.item.ItemStack","parameters":[{"name":"stack","type":{"name":"net.minecraft.world.item.ItemStack","desc":"Lnet/minecraft/world/item/ItemStack;","binaryName":"net/minecraft/world/item/ItemStack"}},{"name":"simulate","type":{"name":"boolean","desc":"Z"}}],"return":{"name":"net.minecraft.world.item.ItemStack","desc":"Lnet/minecraft/world/item/ItemStack;","binaryName":"net/minecraft/world/item/ItemStack"},"doc":{"summary":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"insertItem\" type=\"(int,net.minecraft.world.item.ItemStack,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#insertItem(int, ItemStack, boolean)</ref> but without a specific slot.","text":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"insertItem\" type=\"(int,net.minecraft.world.item.ItemStack,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#insertItem(int, ItemStack, boolean)</ref> but without a specific slot."}},{"name":"hasSpaceFor","modifiers":["public","default"],"typeId":"(java.util.List<net.minecraft.world.item.ItemStack>)boolean","parameters":[{"name":"stacks","type":{"name":"java.util.List<net.minecraft.world.item.ItemStack>","desc":"Ljava/util/List;","binaryName":"java/util/List"}}],"return":{"name":"boolean","desc":"Z"},"doc":{"summary":"Gets whether the item handler has space for all the items given.","text":"Gets whether the item handler has space for all the items given. <b>This does not check whether  the item handler can take the stacks via <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"insertItem\" type=\"(int,net.minecraft.world.item.ItemStack,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#insertItem(int, ItemStack, boolean)</ref>.  However it checks for <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"isItemValid\" type=\"(int,net.minecraft.world.item.ItemStack)boolean\">IItemHandler#isItemValid(int, ItemStack)</ref>.</b>"}},{"name":"extractItem","modifiers":["public","default"],"typeId":"(int,boolean)net.minecraft.world.item.ItemStack","parameters":[{"name":"amount","type":{"name":"int","desc":"I"}},{"name":"simulate","type":{"name":"boolean","desc":"Z"}}],"return":{"name":"net.minecraft.world.item.ItemStack","desc":"Lnet/minecraft/world/item/ItemStack;","binaryName":"net/minecraft/world/item/ItemStack"},"doc":{"summary":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"extractItem\" type=\"(int,int,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#extractItem(int, int, boolean)</ref> but without a specific slot.","text":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"extractItem\" type=\"(int,int,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#extractItem(int, int, boolean)</ref> but without a specific slot."}},{"name":"extractItem","modifiers":["public","default"],"typeId":"(java.util.function.Predicate<net.minecraft.world.item.ItemStack>,int,boolean)net.minecraft.world.item.ItemStack","parameters":[{"name":"predicate","type":{"name":"java.util.function.Predicate<net.minecraft.world.item.ItemStack>","desc":"Ljava/util/function/Predicate;","binaryName":"java/util/function/Predicate"}},{"name":"amount","type":{"name":"int","desc":"I"}},{"name":"simulate","type":{"name":"boolean","desc":"Z"}}],"return":{"name":"net.minecraft.world.item.ItemStack","desc":"Lnet/minecraft/world/item/ItemStack;","binaryName":"net/minecraft/world/item/ItemStack"},"doc":{"summary":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"extractItem\" type=\"(int,int,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#extractItem(int, int, boolean)</ref> but with a predicate instead of a slot.","text":"Works like <ref cls=\"net/minecraftforge/items/IItemHandler\" method=\"extractItem\" type=\"(int,int,boolean)net.minecraft.world.item.ItemStack\">IItemHandler#extractItem(int, int, boolean)</ref> but with a predicate instead of a slot."}},{"name":"wrap","modifiers":["public","static"],"typeId":"(net.minecraftforge.items.IItemHandler)io.github.noeppi_noeppi.libx.inventory.IAdvancedItemHandler","parameters":[{"name":"handler","type":{"name":"net.minecraftforge.items.IItemHandler","desc":"Lnet/minecraftforge/items/IItemHandler;","binaryName":"net/minecraftforge/items/IItemHandler"}}],"return":{"name":"io.github.noeppi_noeppi.libx.inventory.IAdvancedItemHandler","desc":"Lio/github/noeppi_noeppi/libx/inventory/IAdvancedItemHandler;","binaryName":"io/github/noeppi_noeppi/libx/inventory/IAdvancedItemHandler"},"doc":{"summary":"Creates a new IAdvancedItemHandler from an <ref cls=\"net/minecraftforge/items/IItemHandler\">IItemHandler</ref>.","text":"Creates a new IAdvancedItemHandler from an <ref cls=\"net/minecraftforge/items/IItemHandler\">IItemHandler</ref>."}}],"doc":{"summary":"Rich interface that provides some default methods to an <ref cls=\"net/minecraftforge/items/IItemHandler\">IItemHandler</ref>.","text":"Rich interface that provides some default methods to an <ref cls=\"net/minecraftforge/items/IItemHandler\">IItemHandler</ref>.  Just implement this together with <ref cls=\"net/minecraftforge/items/IItemHandler\">IItemHandler</ref>.  <br> If you have an <ref cls=\"net/minecraftforge/items/IItemHandlerModifiable\">IItemHandlerModifiable</ref>, use <ref cls=\"io/github/noeppi_noeppi/libx/inventory/IAdvancedItemHandlerModifiable\">IAdvancedItemHandlerModifiable</ref>  instead."}}
