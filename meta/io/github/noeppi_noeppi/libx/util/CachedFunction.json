{"name":"io/github/noeppi_noeppi/libx/util/CachedFunction","simpleName":"CachedFunction","sourceName":"io.github.noeppi_noeppi.libx.util.CachedFunction","modifiers":["public"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"interfaces":[{"name":"java/util/function/Function","signature":"java.util.function.Function<T,R>","parameters":[null,null]}],"constructors":[{"modifiers":["public"],"typeId":"(java.util.function.Function<T,R>)void","parameters":[{"name":"function","type":{"name":"java.util.function.Function<T,R>","desc":"Ljava/util/function/Function;","binaryName":"java/util/function/Function"}}],"return":{"name":"void","desc":"V"}}],"methods":[{"name":"apply","modifiers":["public"],"typeId":"(T)R","parameters":[{"name":"t","type":{"name":"T","typeVar":"T"}}],"return":{"name":"R","typeVar":"R"}}],"doc":{"summary":"Wraps a pure function.","text":"Wraps a pure function. This makes sure, that the given function is only called once for  each key. The computed values will then be stored to avoid recomputing them."}}
