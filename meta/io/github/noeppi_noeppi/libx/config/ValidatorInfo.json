{
  "name": "io/github/noeppi_noeppi/libx/config/ValidatorInfo",
  "simpleName": "ValidatorInfo",
  "sourceNam": "io.github.noeppi_noeppi.libx.config.ValidatorInfo",
  "modifiers": [
    "public",
    "abstract"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "methods": [
    {
      "name": "type",
      "modifiers": [
        "public",
        "abstract"
      ],
      "type": "()java.lang.Class<T>",
      "parameters": [],
      "return": {
        "name": "java.lang.Class<T>",
        "desc": "Ljava/lang/Class;",
        "binaryName": "java/lang/Class"
      },
      "throws": [],
      "doc": {
        "summary": "Gets the annotation class used.",
        "text": "Gets the annotation class used. This is the class of the annotation, not<br> of the <ref cls=\"java/lang/reflect/Proxy\">Proxy</ref> that implements it at runtime.",
        "properties": []
      }
    },
    {
      "name": "value",
      "modifiers": [
        "public",
        "abstract"
      ],
      "type": "()T",
      "parameters": [],
      "return": {
        "name": "T",
        "typeVar": "T"
      },
      "throws": [],
      "doc": {
        "summary": "Gets the annotation used.",
        "text": "Gets the annotation used.",
        "properties": []
      }
    },
    {
      "name": "value",
      "modifiers": [
        "public",
        "default"
      ],
      "type": "<A>(java.lang.Class<A>)A",
      "parameters": [
        {
          "name": "cls",
          "type": {
            "name": "java.lang.Class<A>",
            "desc": "Ljava/lang/Class;",
            "binaryName": "java/lang/Class"
          }
        }
      ],
      "return": {
        "name": "A",
        "typeVar": "A"
      },
      "throws": [],
      "doc": {
        "summary": "Gets the annotation used, if it matches the given annotation class or null<br> if not.",
        "text": "Gets the annotation used, if it matches the given annotation class or null<br> if not.",
        "properties": []
      }
    },
    {
      "name": "isValid",
      "modifiers": [
        "public",
        "abstract"
      ],
      "type": "(java.lang.Object)boolean",
      "parameters": [
        {
          "name": "value",
          "type": {
            "name": "java.lang.Object",
            "desc": "Ljava/lang/Object;",
            "binaryName": "java/lang/Object"
          }
        }
      ],
      "return": {
        "name": "boolean",
        "desc": "Z"
      },
      "throws": [],
      "doc": {
        "summary": "Gets whether this object matches the validators type and is not corrected by<br> the validator.",
        "text": "Gets whether this object matches the validators type and is not corrected by<br> the validator.",
        "properties": []
      }
    },
    {
      "name": "empty",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "<T>()io.github.noeppi_noeppi.libx.config.ValidatorInfo<T>",
      "parameters": [],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.config.ValidatorInfo<T>",
        "desc": "Lio/github/noeppi_noeppi/libx/config/ValidatorInfo;",
        "binaryName": "io/github/noeppi_noeppi/libx/config/ValidatorInfo"
      },
      "throws": []
    }
  ],
  "doc": {
    "summary": "Interface to retrieve information about a validator used on a config element",
    "text": "Interface to retrieve information about a validator used on a config element",
    "properties": []
  }
}
