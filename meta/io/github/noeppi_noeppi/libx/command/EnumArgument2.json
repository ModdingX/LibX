{
  "name": "io/github/noeppi_noeppi/libx/command/EnumArgument2",
  "simpleName": "EnumArgument2",
  "sourceNam": "io.github.noeppi_noeppi.libx.command.EnumArgument2",
  "modifiers": [
    "public"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "interfaces": [
    {
      "name": "com/mojang/brigadier/arguments/ArgumentType",
      "signature": "com.mojang.brigadier.arguments.ArgumentType<T>",
      "parameters": [
        null
      ]
    }
  ],
  "fields": [
    {
      "name": "enumClass",
      "modifiers": [
        "private",
        "final"
      ],
      "type": {
        "name": "java.lang.Class<T>",
        "desc": "Ljava/lang/Class;",
        "binaryName": "java/lang/Class"
      }
    },
    {
      "name": "invalidValue",
      "modifiers": [
        "private",
        "final"
      ],
      "type": {
        "name": "com.mojang.brigadier.exceptions.DynamicCommandExceptionType",
        "desc": "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;",
        "binaryName": "com/mojang/brigadier/exceptions/DynamicCommandExceptionType"
      }
    }
  ],
  "constructors": [
    {
      "modifiers": [
        "private"
      ],
      "type": "(java.lang.Class<T>)void",
      "parameters": [
        {
          "name": "enumClass",
          "type": {
            "name": "java.lang.Class<T>",
            "desc": "Ljava/lang/Class;",
            "binaryName": "java/lang/Class"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    }
  ],
  "methods": [
    {
      "name": "enumArgument",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "<R>(java.lang.Class<R>)io.github.noeppi_noeppi.libx.command.EnumArgument2<R>",
      "parameters": [
        {
          "name": "enumClass",
          "type": {
            "name": "java.lang.Class<R>",
            "desc": "Ljava/lang/Class;",
            "binaryName": "java/lang/Class"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.command.EnumArgument2<R>",
        "desc": "Lio/github/noeppi_noeppi/libx/command/EnumArgument2;",
        "binaryName": "io/github/noeppi_noeppi/libx/command/EnumArgument2"
      },
      "throws": [],
      "doc": {
        "summary": "Creates a new enum argument for the given enum class.",
        "text": "Creates a new enum argument for the given enum class.",
        "properties": []
      }
    },
    {
      "name": "parse",
      "modifiers": [
        "public"
      ],
      "type": "(com.mojang.brigadier.StringReader)T",
      "parameters": [
        {
          "name": "reader",
          "type": {
            "name": "com.mojang.brigadier.StringReader",
            "desc": "Lcom/mojang/brigadier/StringReader;",
            "binaryName": "com/mojang/brigadier/StringReader"
          }
        }
      ],
      "return": {
        "name": "T",
        "typeVar": "T"
      },
      "throws": [
        {
          "name": "com.mojang.brigadier.exceptions.CommandSyntaxException",
          "desc": "Lcom/mojang/brigadier/exceptions/CommandSyntaxException;",
          "binaryName": "com/mojang/brigadier/exceptions/CommandSyntaxException"
        }
      ]
    },
    {
      "name": "listSuggestions",
      "modifiers": [
        "public"
      ],
      "type": "<S>(com.mojang.brigadier.context.CommandContext<S>,com.mojang.brigadier.suggestion.SuggestionsBuilder)java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions>",
      "parameters": [
        {
          "name": "context",
          "type": {
            "name": "com.mojang.brigadier.context.CommandContext<S>",
            "desc": "Lcom/mojang/brigadier/context/CommandContext;",
            "binaryName": "com/mojang/brigadier/context/CommandContext"
          }
        },
        {
          "name": "builder",
          "type": {
            "name": "com.mojang.brigadier.suggestion.SuggestionsBuilder",
            "desc": "Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;",
            "binaryName": "com/mojang/brigadier/suggestion/SuggestionsBuilder"
          }
        }
      ],
      "return": {
        "name": "java.util.concurrent.CompletableFuture<com.mojang.brigadier.suggestion.Suggestions>",
        "desc": "Ljava/util/concurrent/CompletableFuture;",
        "binaryName": "java/util/concurrent/CompletableFuture"
      },
      "throws": []
    },
    {
      "name": "getExamples",
      "modifiers": [
        "public"
      ],
      "type": "()java.util.Collection<java.lang.String>",
      "parameters": [],
      "return": {
        "name": "java.util.Collection<java.lang.String>",
        "desc": "Ljava/util/Collection;",
        "binaryName": "java/util/Collection"
      },
      "throws": []
    }
  ],
  "doc": {
    "summary": "As the <ref cls=\"net/minecraftforge/server/command/EnumArgument\">EnumArgument</ref> is sometimes a bit buggy because when the entered value is<br> lowercase but the actual enum value is uppercase and it also does not sync properly, here's<br> a variant that solves these issues.",
    "text": "As the <ref cls=\"net/minecraftforge/server/command/EnumArgument\">EnumArgument</ref> is sometimes a bit buggy because when the entered value is<br> lowercase but the actual enum value is uppercase and it also does not sync properly, here's<br> a variant that solves these issues.",
    "properties": []
  }
}
