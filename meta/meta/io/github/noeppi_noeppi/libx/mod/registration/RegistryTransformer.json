{
  "name": "io/github/noeppi_noeppi/libx/mod/registration/RegistryTransformer",
  "simpleName": "RegistryTransformer",
  "sourceNam": "io.github.noeppi_noeppi.libx.mod.registration.RegistryTransformer",
  "modifiers": [
    "public",
    "abstract"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "methods": [
    {
      "name": "getAdditional",
      "modifiers": [
        "public",
        "abstract"
      ],
      "type": "(net.minecraft.resources.ResourceLocation,java.lang.Object)java.lang.Object",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "net.minecraft.resources.ResourceLocation",
            "desc": "Lnet/minecraft/resources/ResourceLocation;",
            "binaryName": "net/minecraft/resources/ResourceLocation"
          }
        },
        {
          "name": "object",
          "type": {
            "name": "java.lang.Object",
            "desc": "Ljava/lang/Object;",
            "binaryName": "java/lang/Object"
          }
        }
      ],
      "return": {
        "name": "java.lang.Object",
        "desc": "Ljava/lang/Object;",
        "binaryName": "java/lang/Object"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an object that should be passed to the system in addition to the given object.",
        "text": "Gets an object that should be passed to the system in addition to the given object.<br> This method will et called for that <ref cls=\"io/github/noeppi_noeppi/libx/mod/registration/Registerable\">Registerable</ref> and all things it registers again, so<br> be careful to not create infinite loops.<br> <br> <b>IMPORTANT: The transformers created by LibX may also consume the original object<br> so you might not always get everything you registered here. However this feature is<br> not available for custom transformers.</b><br> <br> The new object is registered with the same id as the old one. If this is not wanted,<br> wrap it into a <ref cls=\"io/github/noeppi_noeppi/libx/mod/registration/Registerable\">Registerable</ref> via <ref cls=\"io/github/noeppi_noeppi/libx/mod/registration/Registerable\" method=\"getNamedAdditionalRegisters\" type=\"(net.minecraft.resources.ResourceLocation)java.util.Map<java.lang.String,java.lang.Object>\">Registerable#getNamedAdditionalRegisters(ResourceLocation)</ref>.",
        "properties": []
      }
    }
  ],
  "doc": {
    "summary": "A registry transformer is used by the LibX registration system to register additional<br> things dynamically based on other objects, that have been passed to the system.",
    "text": "A registry transformer is used by the LibX registration system to register additional<br> things dynamically based on other objects, that have been passed to the system. For<br> more information see <ref cls=\"io/github/noeppi_noeppi/libx/mod/registration/ModXRegistration\" method=\"initRegistration\" type=\"(io.github.noeppi_noeppi.libx.mod.registration.RegistrationBuilder)void\">ModXRegistration#initRegistration(RegistrationBuilder)</ref>",
    "properties": []
  }
}
