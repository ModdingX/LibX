{
  "name": "io/github/noeppi_noeppi/libx/util/ClassUtil",
  "simpleName": "ClassUtil",
  "sourceNam": "io.github.noeppi_noeppi.libx.util.ClassUtil",
  "modifiers": [
    "public"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "fields": [
    {
      "name": "STACK",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": {
        "name": "java.lang.StackWalker",
        "desc": "Ljava/lang/StackWalker;",
        "binaryName": "java/lang/StackWalker"
      }
    }
  ],
  "constructors": [
    {
      "modifiers": [
        "public"
      ],
      "type": "()void",
      "parameters": [],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    }
  ],
  "methods": [
    {
      "name": "boxed",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "(java.lang.Class<?>)java.lang.Class<?>",
      "parameters": [
        {
          "name": "clazz",
          "type": {
            "name": "java.lang.Class<?>",
            "desc": "Ljava/lang/Class;",
            "binaryName": "java/lang/Class"
          }
        }
      ],
      "return": {
        "name": "java.lang.Class<?>",
        "desc": "Ljava/lang/Class;",
        "binaryName": "java/lang/Class"
      },
      "throws": [],
      "doc": {
        "summary": "Returns the given class unless it's a primitive class in which<br> case the boxed class for that primitive is returned.",
        "text": "Returns the given class unless it's a primitive class in which<br> case the boxed class for that primitive is returned.",
        "properties": []
      }
    },
    {
      "name": "unboxed",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "(java.lang.Class<?>)java.lang.Class<?>",
      "parameters": [
        {
          "name": "clazz",
          "type": {
            "name": "java.lang.Class<?>",
            "desc": "Ljava/lang/Class;",
            "binaryName": "java/lang/Class"
          }
        }
      ],
      "return": {
        "name": "java.lang.Class<?>",
        "desc": "Ljava/lang/Class;",
        "binaryName": "java/lang/Class"
      },
      "throws": [],
      "doc": {
        "summary": "Returns the given class unless it's a boxed primitive class in which<br> case the primitive class for that boxed class is returned.",
        "text": "Returns the given class unless it's a boxed primitive class in which<br> case the primitive class for that boxed class is returned.",
        "properties": []
      }
    },
    {
      "name": "forName",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "(java.lang.String)java.lang.Class<?>",
      "parameters": [
        {
          "name": "cls",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          }
        }
      ],
      "return": {
        "name": "java.lang.Class<?>",
        "desc": "Ljava/lang/Class;",
        "binaryName": "java/lang/Class"
      },
      "throws": [],
      "doc": {
        "summary": "Same as <ref cls=\"java/lang/Class\" method=\"forName\" type=\"(java.lang.String)java.lang.Class<?>\">Class#forName(String)</ref> but instead of throwing a <ref cls=\"java/lang/ClassNotFoundException\">ClassNotFoundException</ref>,<br> returns <code>null</code>.",
        "text": "Same as <ref cls=\"java/lang/Class\" method=\"forName\" type=\"(java.lang.String)java.lang.Class<?>\">Class#forName(String)</ref> but instead of throwing a <ref cls=\"java/lang/ClassNotFoundException\">ClassNotFoundException</ref>,<br> returns <code>null</code>.",
        "properties": []
      }
    }
  ],
  "doc": {
    "summary": "Utilities for instances of the <ref cls=\"java/lang/Class\">Class</ref> class.",
    "text": "Utilities for instances of the <ref cls=\"java/lang/Class\">Class</ref> class.",
    "properties": []
  }
}
