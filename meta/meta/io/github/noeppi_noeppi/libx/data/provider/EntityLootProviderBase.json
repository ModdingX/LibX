{
  "name": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase",
  "simpleName": "EntityLootProviderBase",
  "sourceNam": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase",
  "modifiers": [
    "public",
    "abstract"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "interfaces": [
    {
      "name": "net/minecraft/data/DataProvider",
      "signature": "net.minecraft.data.DataProvider",
      "parameters": []
    }
  ],
  "fields": [
    {
      "name": "GSON",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": {
        "name": "com.google.gson.Gson",
        "desc": "Lcom/google/gson/Gson;",
        "binaryName": "com/google/gson/Gson"
      }
    },
    {
      "name": "mod",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": {
        "name": "io.github.noeppi_noeppi.libx.mod.ModX",
        "desc": "Lio/github/noeppi_noeppi/libx/mod/ModX;",
        "binaryName": "io/github/noeppi_noeppi/libx/mod/ModX"
      }
    },
    {
      "name": "generator",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": {
        "name": "net.minecraft.data.DataGenerator",
        "desc": "Lnet/minecraft/data/DataGenerator;",
        "binaryName": "net/minecraft/data/DataGenerator"
      }
    },
    {
      "name": "functionMap",
      "modifiers": [
        "private",
        "final"
      ],
      "type": {
        "name": "java.util.Map<net.minecraft.world.entity.EntityType<?>,java.util.function.Function<net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.LootTable.Builder>>",
        "desc": "Ljava/util/Map;",
        "binaryName": "java/util/Map"
      }
    }
  ],
  "constructors": [
    {
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.mod.ModX,net.minecraft.data.DataGenerator)void",
      "parameters": [
        {
          "name": "mod",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.mod.ModX",
            "desc": "Lio/github/noeppi_noeppi/libx/mod/ModX;",
            "binaryName": "io/github/noeppi_noeppi/libx/mod/ModX"
          }
        },
        {
          "name": "generator",
          "type": {
            "name": "net.minecraft.data.DataGenerator",
            "desc": "Lnet/minecraft/data/DataGenerator;",
            "binaryName": "net/minecraft/data/DataGenerator"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    }
  ],
  "methods": [
    {
      "name": "customLootTable",
      "modifiers": [
        "protected"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.LootTable.Builder)void",
      "parameters": [
        {
          "name": "entity",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          }
        },
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.LootTable.Builder",
            "desc": "Lnet/minecraft/world/level/storage/loot/LootTable$Builder;",
            "binaryName": "net/minecraft/world/level/storage/loot/LootTable$Builder"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": [],
      "doc": {
        "summary": "The given entity will get the given loot table.",
        "text": "The given entity will get the given loot table.",
        "properties": []
      }
    },
    {
      "name": "customLootTable",
      "modifiers": [
        "protected"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>,java.util.function.Function<net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.LootTable.Builder>)void",
      "parameters": [
        {
          "name": "entity",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          }
        },
        {
          "name": "loot",
          "type": {
            "name": "java.util.function.Function<net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.LootTable.Builder>",
            "desc": "Ljava/util/function/Function;",
            "binaryName": "java/util/function/Function"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": [],
      "doc": {
        "summary": "The given entity will get the given loot table function.",
        "text": "The given entity will get the given loot table function.",
        "properties": []
      }
    },
    {
      "name": "getName",
      "modifiers": [
        "public",
        "final"
      ],
      "type": "()java.lang.String",
      "parameters": [],
      "return": {
        "name": "java.lang.String",
        "desc": "Ljava/lang/String;",
        "binaryName": "java/lang/String"
      },
      "throws": []
    },
    {
      "name": "run",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.data.HashCache)void",
      "parameters": [
        {
          "name": "cache",
          "type": {
            "name": "net.minecraft.data.HashCache",
            "desc": "Lnet/minecraft/data/HashCache;",
            "binaryName": "net/minecraft/data/HashCache"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": [
        {
          "name": "java.io.IOException",
          "desc": "Ljava/io/IOException;",
          "binaryName": "java/io/IOException"
        }
      ]
    },
    {
      "name": "setup",
      "modifiers": [
        "protected",
        "abstract"
      ],
      "type": "()void",
      "parameters": [],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    },
    {
      "name": "getPath",
      "modifiers": [
        "private",
        "static"
      ],
      "type": "(java.nio.file.Path,net.minecraft.resources.ResourceLocation)java.nio.file.Path",
      "parameters": [
        {
          "name": "root",
          "type": {
            "name": "java.nio.file.Path",
            "desc": "Ljava/nio/file/Path;",
            "binaryName": "java/nio/file/Path"
          }
        },
        {
          "name": "id",
          "type": {
            "name": "net.minecraft.resources.ResourceLocation",
            "desc": "Lnet/minecraft/resources/ResourceLocation;",
            "binaryName": "net/minecraft/resources/ResourceLocation"
          }
        }
      ],
      "return": {
        "name": "java.nio.file.Path",
        "desc": "Ljava/nio/file/Path;",
        "binaryName": "java/nio/file/Path"
      },
      "throws": []
    },
    {
      "name": "drops",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>,net.minecraft.world.item.ItemStack[])void",
      "parameters": [
        {
          "name": "e",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          },
          "doc": "The entity to add the loot table to."
        },
        {
          "name": "drops",
          "type": {
            "name": "net.minecraft.world.item.ItemStack[]",
            "arrayOf": {
              "name": "net.minecraft.world.item.ItemStack",
              "desc": "Lnet/minecraft/world/item/ItemStack;",
              "binaryName": "net/minecraft/world/item/ItemStack"
            }
          },
          "doc": "A list of stacks that are dropped."
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Method to add a custom loot table for an entity.",
        "text": "Method to add a custom loot table for an entity.",
        "properties": []
      }
    },
    {
      "name": "drops",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[])void",
      "parameters": [
        {
          "name": "e",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          },
          "doc": "The entity to add the loot table to."
        },
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
            }
          },
          "doc": "A list of loot builders that will all be applied."
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Method to add a custom loot table for an entity.",
        "text": "Method to add a custom loot table for an entity.",
        "properties": []
      }
    },
    {
      "name": "drops",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>,io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[])void",
      "parameters": [
        {
          "name": "e",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          },
          "doc": "The entity to add the loot table to."
        },
        {
          "name": "loot",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[]",
            "arrayOf": {
              "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
              "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
              "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
            }
          },
          "doc": "A list of loot factories that will all be applied."
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Method to add a custom loot table for an entity.",
        "text": "Method to add a custom loot table for an entity.",
        "properties": []
      }
    },
    {
      "name": "repeat",
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory,int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "factory",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
            "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
            "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
          }
        },
        {
          "name": "times",
          "type": {
            "name": "int",
            "desc": "I"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Repeats a loot factory a fixed amount of times.",
        "text": "Repeats a loot factory a fixed amount of times.",
        "properties": []
      }
    },
    {
      "name": "from",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolSingletonContainer.Builder<?>)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
      "parameters": [
        {
          "name": "entry",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolSingletonContainer.Builder<?>",
            "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder;",
            "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry"
      },
      "throws": [],
      "doc": {
        "summary": "Turns a singleton loot entry into a simple loot factory.",
        "text": "Turns a singleton loot entry into a simple loot factory.",
        "properties": []
      }
    },
    {
      "name": "from",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "entry",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
            "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
            "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Turns a loot entry into a loot factory.",
        "text": "Turns a loot entry into a loot factory.",
        "properties": []
      }
    },
    {
      "name": "from",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction.Builder<?>)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "function",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction.Builder<?>",
            "desc": "Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;",
            "binaryName": "net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "Turns a loot function into a loot modifier.",
        "text": "Turns a loot function into a loot modifier.",
        "properties": []
      }
    },
    {
      "name": "looting",
      "modifiers": [
        "public"
      ],
      "type": "(int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "max",
          "type": {
            "name": "int",
            "desc": "I"
          },
          "doc": "The maximum amount of additional drops."
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a loot modifier for the looting enchantment.",
        "text": "Gets a loot modifier for the looting enchantment.",
        "properties": []
      }
    },
    {
      "name": "looting",
      "modifiers": [
        "public"
      ],
      "type": "(int,int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "min",
          "type": {
            "name": "int",
            "desc": "I"
          },
          "doc": "The minimum amount of additional drops."
        },
        {
          "name": "max",
          "type": {
            "name": "int",
            "desc": "I"
          },
          "doc": "The maximum amount of additional drops."
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a loot modifier for the looting enchantment.",
        "text": "Gets a loot modifier for the looting enchantment.",
        "properties": []
      }
    },
    {
      "name": "random",
      "modifiers": [
        "public"
      ],
      "type": "(float)net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
      "parameters": [
        {
          "name": "chance",
          "type": {
            "name": "float",
            "desc": "F"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
        "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder"
      },
      "throws": [],
      "doc": {
        "summary": "A condition that is random with a chance.",
        "text": "A condition that is random with a chance.",
        "properties": []
      }
    },
    {
      "name": "count",
      "modifiers": [
        "public"
      ],
      "type": "(int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "count",
          "type": {
            "name": "int",
            "desc": "I"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "A loot modifier that sets the count of a stack.",
        "text": "A loot modifier that sets the count of a stack.",
        "properties": []
      }
    },
    {
      "name": "count",
      "modifiers": [
        "public"
      ],
      "type": "(int,int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "min",
          "type": {
            "name": "int",
            "desc": "I"
          }
        },
        {
          "name": "max",
          "type": {
            "name": "int",
            "desc": "I"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "A loot modifier that uniformly sets the count of a stack between two values.",
        "text": "A loot modifier that uniformly sets the count of a stack between two values.",
        "properties": []
      }
    },
    {
      "name": "countBinomial",
      "modifiers": [
        "public"
      ],
      "type": "(float,int)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
      "parameters": [
        {
          "name": "chance",
          "type": {
            "name": "float",
            "desc": "F"
          }
        },
        {
          "name": "num",
          "type": {
            "name": "int",
            "desc": "I"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootModifier",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootModifier"
      },
      "throws": [],
      "doc": {
        "summary": "A loot modifier that sets the count of a stack based on a binomial formula.",
        "text": "A loot modifier that sets the count of a stack based on a binomial formula.",
        "properties": []
      }
    },
    {
      "name": "not",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder)net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
      "parameters": [
        {
          "name": "condition",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
            "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;",
            "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
        "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder"
      },
      "throws": [],
      "doc": {
        "summary": "Inverts a loot condition",
        "text": "Inverts a loot condition",
        "properties": []
      }
    },
    {
      "name": "or",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder[])net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
      "parameters": [
        {
          "name": "conditions",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
              "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition.Builder",
        "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Joins conditions with OR.",
        "text": "Joins conditions with OR.",
        "properties": []
      }
    },
    {
      "name": "combine",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[])net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot builders into one.",
        "text": "Combines the given loot builders into one. (All loot builders will be applied).",
        "properties": []
      }
    },
    {
      "name": "combine",
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[])io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[]",
            "arrayOf": {
              "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
              "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
              "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot factories into one.",
        "text": "Combines the given loot factories into one. (All loot factories will be applied).",
        "properties": []
      }
    },
    {
      "name": "random",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[])net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot builders into one.",
        "text": "Combines the given loot builders into one. (One loot builder will be applied).",
        "properties": []
      }
    },
    {
      "name": "random",
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[])io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[]",
            "arrayOf": {
              "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
              "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
              "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot factories into one.",
        "text": "Combines the given loot factories into one. (One loot factory will be applied).",
        "properties": []
      }
    },
    {
      "name": "first",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[])net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot builders into one.",
        "text": "Combines the given loot builders into one. Only the first matching builder is applied.",
        "properties": []
      }
    },
    {
      "name": "first",
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[])io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[]",
            "arrayOf": {
              "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
              "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
              "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot factories into one.",
        "text": "Combines the given loot factories into one. Only the first matching factory is applied.",
        "properties": []
      }
    },
    {
      "name": "whileMatch",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[])net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer.Builder<?>",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot builders into one.",
        "text": "Combines the given loot builders into one.<br> From all the loot entries until the first one not matching, one is selected.",
        "properties": []
      }
    },
    {
      "name": "whileMatch",
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[])io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
      "parameters": [
        {
          "name": "loot",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory[]",
            "arrayOf": {
              "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
              "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
              "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.LootFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$LootFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Combines the given loot factories into one.",
        "text": "Combines the given loot factories into one.<br> From all the loot factories until the first one not matching, one is selected.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.ItemLike)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
      "parameters": [
        {
          "name": "item",
          "type": {
            "name": "net.minecraft.world.level.ItemLike",
            "desc": "Lnet/minecraft/world/level/ItemLike;",
            "binaryName": "net/minecraft/world/level/ItemLike"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry"
      },
      "throws": [],
      "doc": {
        "summary": "A loot factory for a specific item.",
        "text": "A loot factory for a specific item.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.item.ItemStack)io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
      "parameters": [
        {
          "name": "stack",
          "type": {
            "name": "net.minecraft.world.item.ItemStack",
            "desc": "Lnet/minecraft/world/item/ItemStack;",
            "binaryName": "net/minecraft/world/item/ItemStack"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.EntityLootProviderBase.WrappedLootEntry",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase$WrappedLootEntry"
      },
      "throws": [],
      "doc": {
        "summary": "Tries to create the best possible representation of stack in a loot entry.",
        "text": "Tries to create the best possible representation of stack in a loot entry.",
        "properties": []
      }
    },
    {
      "name": "defaultBehavior",
      "modifiers": [
        "protected"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>)net.minecraft.world.level.storage.loot.LootTable.Builder",
      "parameters": [
        {
          "name": "e",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.LootTable.Builder",
        "desc": "Lnet/minecraft/world/level/storage/loot/LootTable$Builder;",
        "binaryName": "net/minecraft/world/level/storage/loot/LootTable$Builder"
      },
      "throws": [],
      "doc": {
        "summary": "Creates a default loot table for the given entity.",
        "text": "Creates a default loot table for the given entity. Can be overridden to alter<br> default behaviour. Should return null if no loot table should be generated.",
        "properties": []
      }
    }
  ],
  "doc": {
    "summary": "A base class for entity loot providers.",
    "text": "A base class for entity loot providers. An extending class should call the<br> <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase\" method=\"customLootTable\" type=\"(net.minecraft.world.entity.EntityType<?>,net.minecraft.world.level.storage.loot.LootTable.Builder)void\">customLootTable</ref> methods in<br> <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/EntityLootProviderBase\" method=\"setup\" type=\"()void\">setup</ref> to adjust the loot tables.",
    "properties": []
  }
}
