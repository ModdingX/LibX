{
  "name": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase",
  "simpleName": "AdvancementProviderBase",
  "sourceNam": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase",
  "modifiers": [
    "public",
    "abstract"
  ],
  "superClass": {
    "name": "java/lang/Object",
    "signature": "java.lang.Object",
    "parameters": []
  },
  "interfaces": [
    {
      "name": "net/minecraft/data/DataProvider",
      "signature": "net.minecraft.data.DataProvider",
      "parameters": []
    }
  ],
  "fields": [
    {
      "name": "GSON",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": {
        "name": "com.google.gson.Gson",
        "desc": "Lcom/google/gson/Gson;",
        "binaryName": "com/google/gson/Gson"
      }
    },
    {
      "name": "mod",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": {
        "name": "io.github.noeppi_noeppi.libx.mod.ModX",
        "desc": "Lio/github/noeppi_noeppi/libx/mod/ModX;",
        "binaryName": "io/github/noeppi_noeppi/libx/mod/ModX"
      }
    },
    {
      "name": "generator",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": {
        "name": "net.minecraft.data.DataGenerator",
        "desc": "Lnet/minecraft/data/DataGenerator;",
        "binaryName": "net/minecraft/data/DataGenerator"
      }
    },
    {
      "name": "advancements",
      "modifiers": [
        "private",
        "final"
      ],
      "type": {
        "name": "java.util.Map<net.minecraft.resources.ResourceLocation,java.util.function.Supplier<net.minecraft.advancements.Advancement>>",
        "desc": "Ljava/util/Map;",
        "binaryName": "java/util/Map"
      }
    },
    {
      "name": "rootId",
      "modifiers": [
        "private"
      ],
      "type": {
        "name": "java.lang.String",
        "desc": "Ljava/lang/String;",
        "binaryName": "java/lang/String"
      }
    },
    {
      "name": "rootSupplier",
      "modifiers": [
        "private"
      ],
      "type": {
        "name": "java.util.function.Supplier<net.minecraft.advancements.Advancement>",
        "desc": "Ljava/util/function/Supplier;",
        "binaryName": "java/util/function/Supplier"
      }
    }
  ],
  "constructors": [
    {
      "modifiers": [
        "public"
      ],
      "type": "(io.github.noeppi_noeppi.libx.mod.ModX,net.minecraft.data.DataGenerator)void",
      "parameters": [
        {
          "name": "mod",
          "type": {
            "name": "io.github.noeppi_noeppi.libx.mod.ModX",
            "desc": "Lio/github/noeppi_noeppi/libx/mod/ModX;",
            "binaryName": "io/github/noeppi_noeppi/libx/mod/ModX"
          }
        },
        {
          "name": "generator",
          "type": {
            "name": "net.minecraft.data.DataGenerator",
            "desc": "Lnet/minecraft/data/DataGenerator;",
            "binaryName": "net/minecraft/data/DataGenerator"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    }
  ],
  "methods": [
    {
      "name": "setup",
      "modifiers": [
        "public",
        "abstract"
      ],
      "type": "()void",
      "parameters": [],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    },
    {
      "name": "getName",
      "modifiers": [
        "public"
      ],
      "type": "()java.lang.String",
      "parameters": [],
      "return": {
        "name": "java.lang.String",
        "desc": "Ljava/lang/String;",
        "binaryName": "java/lang/String"
      },
      "throws": []
    },
    {
      "name": "run",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.data.HashCache)void",
      "parameters": [
        {
          "name": "cache",
          "type": {
            "name": "net.minecraft.data.HashCache",
            "desc": "Lnet/minecraft/data/HashCache;",
            "binaryName": "net/minecraft/data/HashCache"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": [
        {
          "name": "java.io.IOException",
          "desc": "Ljava/io/IOException;",
          "binaryName": "java/io/IOException"
        }
      ]
    },
    {
      "name": "root",
      "modifiers": [
        "public"
      ],
      "type": "()io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
      "parameters": [],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider.",
        "text": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider. The root id will be the modid.",
        "properties": []
      }
    },
    {
      "name": "root",
      "modifiers": [
        "public"
      ],
      "type": "(java.lang.String)io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          },
          "doc": "The root id. The actual advancement id will be <code>modid:id/root</code>"
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider.",
        "text": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider.",
        "properties": []
      }
    },
    {
      "name": "root",
      "modifiers": [
        "public"
      ],
      "type": "(java.lang.String,java.lang.String)io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
      "parameters": [
        {
          "name": "namespace",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          },
          "doc": "The namespace of the root advancement."
        },
        {
          "name": "id",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          },
          "doc": "The root id. The actual advancement id will be <code>namespace:id/root</code>"
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider.",
        "text": "Gets an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the root <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> for<br> this provider.",
        "properties": []
      }
    },
    {
      "name": "advancement",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.advancements.Advancement)void",
      "parameters": [
        {
          "name": "advancement",
          "type": {
            "name": "net.minecraft.advancements.Advancement",
            "desc": "Lnet/minecraft/advancements/Advancement;",
            "binaryName": "net/minecraft/advancements/Advancement"
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": [],
      "doc": {
        "summary": "Adds a built <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> to the provider.",
        "text": "Adds a built <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> to the provider.",
        "properties": []
      }
    },
    {
      "name": "advancement",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceLocation)io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "net.minecraft.resources.ResourceLocation",
            "desc": "Lnet/minecraft/resources/ResourceLocation;",
            "binaryName": "net/minecraft/resources/ResourceLocation"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Adds an advancement to the provider identified by its <ref cls=\"net/minecraft/resources/ResourceLocation\">ResourceLocation</ref>.",
        "text": "Adds an advancement to the provider identified by its <ref cls=\"net/minecraft/resources/ResourceLocation\">ResourceLocation</ref>. Returns<br> an <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the advancement.",
        "properties": []
      }
    },
    {
      "name": "advancement",
      "modifiers": [
        "public"
      ],
      "type": "(java.lang.String)io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory"
      },
      "throws": [],
      "doc": {
        "summary": "Adds an <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> to the provider identified by an id.",
        "text": "Adds an <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> to the provider identified by an id. The<br> <ref cls=\"net/minecraft/resources/ResourceLocation\">ResourceLocation</ref> is built with the modid and the root advancement id. Returns an<br> <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$AdvancementFactory\">AdvancementFactory</ref> to customise the advancement.",
        "properties": []
      }
    },
    {
      "name": "dummy",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceLocation)net.minecraft.advancements.Advancement",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "net.minecraft.resources.ResourceLocation",
            "desc": "Lnet/minecraft/resources/ResourceLocation;",
            "binaryName": "net/minecraft/resources/ResourceLocation"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.Advancement",
        "desc": "Lnet/minecraft/advancements/Advancement;",
        "binaryName": "net/minecraft/advancements/Advancement"
      },
      "throws": [],
      "doc": {
        "summary": "Creates a dummy <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> with a given id to be used as a parent if your<br> advancement should have another advancement from another mod as parent.",
        "text": "Creates a dummy <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> with a given id to be used as a parent if your<br> advancement should have another advancement from another mod as parent.",
        "properties": []
      }
    },
    {
      "name": "dummy",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceLocation,boolean)net.minecraft.advancements.Advancement",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "net.minecraft.resources.ResourceLocation",
            "desc": "Lnet/minecraft/resources/ResourceLocation;",
            "binaryName": "net/minecraft/resources/ResourceLocation"
          }
        },
        {
          "name": "hidden",
          "type": {
            "name": "boolean",
            "desc": "Z"
          },
          "doc": "Whether the advancement is hidden."
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.Advancement",
        "desc": "Lnet/minecraft/advancements/Advancement;",
        "binaryName": "net/minecraft/advancements/Advancement"
      },
      "throws": [],
      "doc": {
        "summary": "Creates a dummy <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> with a given id to be used as a parent if your<br> advancement should have another advancement from another mod as parent.",
        "text": "Creates a dummy <ref cls=\"net/minecraft/advancements/Advancement\">advancement</ref> with a given id to be used as a parent if your<br> advancement should have another advancement from another mod as parent.",
        "properties": []
      }
    },
    {
      "name": "idFor",
      "modifiers": [
        "private"
      ],
      "type": "(java.lang.String)net.minecraft.resources.ResourceLocation",
      "parameters": [
        {
          "name": "id",
          "type": {
            "name": "java.lang.String",
            "desc": "Ljava/lang/String;",
            "binaryName": "java/lang/String"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.resources.ResourceLocation",
        "desc": "Lnet/minecraft/resources/ResourceLocation;",
        "binaryName": "net/minecraft/resources/ResourceLocation"
      },
      "throws": []
    },
    {
      "name": "items",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.ItemLike[])net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.world.level.ItemLike[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.ItemLike",
              "desc": "Lnet/minecraft/world/level/ItemLike;",
              "binaryName": "net/minecraft/world/level/ItemLike"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "properties": []
      }
    },
    {
      "name": "items",
      "modifiers": [
        "public",
        "final"
      ],
      "type": "(net.minecraft.tags.Tag<net.minecraft.world.item.Item>[])net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>[]",
            "arrayOf": {
              "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>",
              "desc": "Lnet/minecraft/tags/Tag;",
              "binaryName": "net/minecraft/tags/Tag"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "properties": []
      }
    },
    {
      "name": "items",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.advancements.critereon.ItemPredicate[])net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.advancements.critereon.ItemPredicate[]",
            "arrayOf": {
              "name": "net.minecraft.advancements.critereon.ItemPredicate",
              "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
              "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires all of the given items to be in<br> the inventory at the same time.",
        "properties": []
      }
    },
    {
      "name": "itemTasks",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.ItemLike[])io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.world.level.ItemLike[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.ItemLike",
              "desc": "Lnet/minecraft/world/level/ItemLike;",
              "binaryName": "net/minecraft/world/level/ItemLike"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "text": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "properties": []
      }
    },
    {
      "name": "itemTasks",
      "modifiers": [
        "public",
        "final"
      ],
      "type": "(net.minecraft.tags.Tag<net.minecraft.world.item.Item>[])io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>[]",
            "arrayOf": {
              "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>",
              "desc": "Lnet/minecraft/tags/Tag;",
              "binaryName": "net/minecraft/tags/Tag"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "text": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "properties": []
      }
    },
    {
      "name": "itemTasks",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.advancements.critereon.ItemPredicate[])io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
      "parameters": [
        {
          "name": "items",
          "type": {
            "name": "net.minecraft.advancements.critereon.ItemPredicate[]",
            "arrayOf": {
              "name": "net.minecraft.advancements.critereon.ItemPredicate",
              "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
              "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
            }
          }
        }
      ],
      "return": {
        "name": "io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.TaskFactory",
        "desc": "Lio/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory;",
        "binaryName": "io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "text": "Gets a <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase$TaskFactory\">TaskFactory</ref> that adds a task for every item given to this method.",
        "properties": []
      }
    },
    {
      "name": "eat",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.ItemLike)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "food",
          "type": {
            "name": "net.minecraft.world.level.ItemLike",
            "desc": "Lnet/minecraft/world/level/ItemLike;",
            "binaryName": "net/minecraft/world/level/ItemLike"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "properties": []
      }
    },
    {
      "name": "eat",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.tags.Tag<net.minecraft.world.item.Item>)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "food",
          "type": {
            "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>",
            "desc": "Lnet/minecraft/tags/Tag;",
            "binaryName": "net/minecraft/tags/Tag"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "properties": []
      }
    },
    {
      "name": "eat",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.advancements.critereon.ItemPredicate)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "food",
          "type": {
            "name": "net.minecraft.advancements.critereon.ItemPredicate",
            "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
            "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to consume (eat/drink) an item.",
        "properties": []
      }
    },
    {
      "name": "leave",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "dimension",
          "type": {
            "name": "net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>",
            "desc": "Lnet/minecraft/resources/ResourceKey;",
            "binaryName": "net/minecraft/resources/ResourceKey"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to leave a dimension.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to leave a dimension.",
        "properties": []
      }
    },
    {
      "name": "enter",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "dimension",
          "type": {
            "name": "net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>",
            "desc": "Lnet/minecraft/resources/ResourceKey;",
            "binaryName": "net/minecraft/resources/ResourceKey"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to enter a dimension.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to enter a dimension.",
        "properties": []
      }
    },
    {
      "name": "changeDim",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>,net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>)net.minecraft.advancements.CriterionTriggerInstance",
      "parameters": [
        {
          "name": "from",
          "type": {
            "name": "net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>",
            "desc": "Lnet/minecraft/resources/ResourceKey;",
            "binaryName": "net/minecraft/resources/ResourceKey"
          }
        },
        {
          "name": "to",
          "type": {
            "name": "net.minecraft.resources.ResourceKey<net.minecraft.world.level.Level>",
            "desc": "Lnet/minecraft/resources/ResourceKey;",
            "binaryName": "net/minecraft/resources/ResourceKey"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.CriterionTriggerInstance",
        "desc": "Lnet/minecraft/advancements/CriterionTriggerInstance;",
        "binaryName": "net/minecraft/advancements/CriterionTriggerInstance"
      },
      "throws": [],
      "doc": {
        "summary": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to perform a specific dimension change.",
        "text": "Gets a <ref cls=\"net/minecraft/advancements/CriterionTriggerInstance\">criterion</ref> that requires a player to perform a specific dimension change.",
        "properties": []
      }
    },
    {
      "name": "entity",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.advancements.critereon.EntityPredicate)net.minecraft.advancements.critereon.EntityPredicate.Composite",
      "parameters": [
        {
          "name": "entity",
          "type": {
            "name": "net.minecraft.advancements.critereon.EntityPredicate",
            "desc": "Lnet/minecraft/advancements/critereon/EntityPredicate;",
            "binaryName": "net/minecraft/advancements/critereon/EntityPredicate"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.EntityPredicate.Composite",
        "desc": "Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;",
        "binaryName": "net/minecraft/advancements/critereon/EntityPredicate$Composite"
      },
      "throws": [],
      "doc": {
        "summary": "Gets the given <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate\">EntityPredicate</ref> as an <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate$Composite\">EntityPredicate.Composite</ref>.",
        "text": "Gets the given <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate\">EntityPredicate</ref> as an <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate$Composite\">EntityPredicate.Composite</ref>.",
        "properties": []
      }
    },
    {
      "name": "entity",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.entity.EntityType<?>)net.minecraft.advancements.critereon.EntityPredicate.Composite",
      "parameters": [
        {
          "name": "type",
          "type": {
            "name": "net.minecraft.world.entity.EntityType<?>",
            "desc": "Lnet/minecraft/world/entity/EntityType;",
            "binaryName": "net/minecraft/world/entity/EntityType"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.EntityPredicate.Composite",
        "desc": "Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;",
        "binaryName": "net/minecraft/advancements/critereon/EntityPredicate$Composite"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate$Composite\">EntityPredicate.Composite</ref> that matches for a specific entity type.",
        "text": "Gets an <ref cls=\"net/minecraft/advancements/critereon/EntityPredicate$Composite\">EntityPredicate.Composite</ref> that matches for a specific entity type.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.ItemLike,net.minecraft.world.item.enchantment.Enchantment[])net.minecraft.advancements.critereon.ItemPredicate",
      "parameters": [
        {
          "name": "item",
          "type": {
            "name": "net.minecraft.world.level.ItemLike",
            "desc": "Lnet/minecraft/world/level/ItemLike;",
            "binaryName": "net/minecraft/world/level/ItemLike"
          }
        },
        {
          "name": "enchs",
          "type": {
            "name": "net.minecraft.world.item.enchantment.Enchantment[]",
            "arrayOf": {
              "name": "net.minecraft.world.item.enchantment.Enchantment",
              "desc": "Lnet/minecraft/world/item/enchantment/Enchantment;",
              "binaryName": "net/minecraft/world/item/enchantment/Enchantment"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate",
        "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
        "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an item and optionally some enchantments.",
        "text": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an item and optionally some enchantments.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.tags.Tag<net.minecraft.world.item.Item>,net.minecraft.world.item.enchantment.Enchantment[])net.minecraft.advancements.critereon.ItemPredicate",
      "parameters": [
        {
          "name": "item",
          "type": {
            "name": "net.minecraft.tags.Tag<net.minecraft.world.item.Item>",
            "desc": "Lnet/minecraft/tags/Tag;",
            "binaryName": "net/minecraft/tags/Tag"
          }
        },
        {
          "name": "enchs",
          "type": {
            "name": "net.minecraft.world.item.enchantment.Enchantment[]",
            "arrayOf": {
              "name": "net.minecraft.world.item.enchantment.Enchantment",
              "desc": "Lnet/minecraft/world/item/enchantment/Enchantment;",
              "binaryName": "net/minecraft/world/item/enchantment/Enchantment"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate",
        "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
        "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an item and optionally some enchantments.",
        "text": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an item and optionally some enchantments.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.item.enchantment.Enchantment[])net.minecraft.advancements.critereon.ItemPredicate",
      "parameters": [
        {
          "name": "enchs",
          "type": {
            "name": "net.minecraft.world.item.enchantment.Enchantment[]",
            "arrayOf": {
              "name": "net.minecraft.world.item.enchantment.Enchantment",
              "desc": "Lnet/minecraft/world/item/enchantment/Enchantment;",
              "binaryName": "net/minecraft/world/item/enchantment/Enchantment"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate",
        "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
        "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
      },
      "vararg": true,
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for some enchantments.",
        "text": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for some enchantments.",
        "properties": []
      }
    },
    {
      "name": "stack",
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.item.enchantment.Enchantment,int)net.minecraft.advancements.critereon.ItemPredicate",
      "parameters": [
        {
          "name": "ench",
          "type": {
            "name": "net.minecraft.world.item.enchantment.Enchantment",
            "desc": "Lnet/minecraft/world/item/enchantment/Enchantment;",
            "binaryName": "net/minecraft/world/item/enchantment/Enchantment"
          }
        },
        {
          "name": "min",
          "type": {
            "name": "int",
            "desc": "I"
          }
        }
      ],
      "return": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate",
        "desc": "Lnet/minecraft/advancements/critereon/ItemPredicate;",
        "binaryName": "net/minecraft/advancements/critereon/ItemPredicate"
      },
      "throws": [],
      "doc": {
        "summary": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an enchantment with a minimum level.",
        "text": "Gets an <ref cls=\"net/minecraft/advancements/critereon/ItemPredicate\">ItemPredicate</ref> for an enchantment with a minimum level.",
        "properties": []
      }
    }
  ],
  "doc": {
    "summary": "Base provider for custom <ref cls=\"net/minecraft/advancements/Advancement\">advancements</ref>.",
    "text": "Base provider for custom <ref cls=\"net/minecraft/advancements/Advancement\">advancements</ref>. If you want to have multiple advancement<br> tabs, use multiple providers. Every provider has one root advancement. All advancements with no<br> explicit parent will be added to it. You should configure your advancements with the <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase\" method=\"root\" type=\"()io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory\">#root()</ref><br> and <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase\" method=\"advancement\" type=\"(java.lang.String)io.github.noeppi_noeppi.libx.data.provider.AdvancementProviderBase.AdvancementFactory\">#advancement(String)</ref> methods in <ref cls=\"io/github/noeppi_noeppi/libx/data/provider/AdvancementProviderBase\" method=\"setup\" type=\"()void\">setup</ref>.",
    "properties": []
  }
}
