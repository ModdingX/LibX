{
  "name": "io/github/noeppi_noeppi/libx/impl/loot/AllLootEntry",
  "simpleName": "AllLootEntry",
  "sourceNam": "io.github.noeppi_noeppi.libx.impl.loot.AllLootEntry",
  "modifiers": [
    "public"
  ],
  "superClass": {
    "name": "net/minecraft/world/level/storage/loot/entries/CompositeEntryBase",
    "signature": "net.minecraft.world.level.storage.loot.entries.CompositeEntryBase",
    "parameters": []
  },
  "fields": [
    {
      "name": "ID",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": {
        "name": "net.minecraft.resources.ResourceLocation",
        "desc": "Lnet/minecraft/resources/ResourceLocation;",
        "binaryName": "net/minecraft/resources/ResourceLocation"
      }
    },
    {
      "name": "TYPE",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryType",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryType"
      }
    }
  ],
  "constructors": [
    {
      "modifiers": [
        "public"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer[],net.minecraft.world.level.storage.loot.predicates.LootItemCondition[])void",
      "parameters": [
        {
          "name": "children",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer"
            }
          }
        },
        {
          "name": "conditions",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.predicates.LootItemCondition",
              "desc": "Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;",
              "binaryName": "net/minecraft/world/level/storage/loot/predicates/LootItemCondition"
            }
          }
        }
      ],
      "return": {
        "name": "void",
        "desc": "V"
      },
      "throws": []
    }
  ],
  "methods": [
    {
      "name": "getType",
      "modifiers": [
        "public"
      ],
      "type": "()net.minecraft.world.level.storage.loot.entries.LootPoolEntryType",
      "parameters": [],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.LootPoolEntryType",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/LootPoolEntryType"
      },
      "throws": []
    },
    {
      "name": "compose",
      "modifiers": [
        "protected"
      ],
      "type": "(net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer[])net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer",
      "parameters": [
        {
          "name": "entries",
          "type": {
            "name": "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer[]",
            "arrayOf": {
              "name": "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer",
              "desc": "Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;",
              "binaryName": "net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer"
            }
          }
        }
      ],
      "return": {
        "name": "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer",
        "desc": "Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;",
        "binaryName": "net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer"
      },
      "throws": []
    }
  ]
}
