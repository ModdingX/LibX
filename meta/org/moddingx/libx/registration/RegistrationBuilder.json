{"name":"org/moddingx/libx/registration/RegistrationBuilder","simpleName":"RegistrationBuilder","sourceName":"org.moddingx.libx.registration.RegistrationBuilder","modifiers":["public"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"constructors":[{"modifiers":["public"],"typeId":"()void","parameters":[],"return":{"name":"void","desc":"V"}}],"methods":[{"name":"disableRegistryTracking","modifiers":["public"],"typeId":"()void","parameters":[],"return":{"name":"void","desc":"V"},"doc":{"summary":"Disables automatic registry tracking.","text":"Disables automatic registry tracking. That means when registering objects,   <ref cls=\"org/moddingx/libx/registration/Registerable\" method=\"initTracking\" type=\"(org.moddingx.libx.registration.RegistrationContext,org.moddingx.libx.registration.Registerable.TrackingCollector)void\">Registerable#initTracking(RegistrationContext, Registerable.TrackingCollector)</ref>  won't be called and ModInit won't add fields to the tracker."}},{"name":"condition","modifiers":["public"],"typeId":"(org.moddingx.libx.registration.RegistryCondition)void","parameters":[{"name":"condition","type":{"name":"org.moddingx.libx.registration.RegistryCondition","desc":"Lorg/moddingx/libx/registration/RegistryCondition;","binaryName":"org/moddingx/libx/registration/RegistryCondition"}}],"return":{"name":"void","desc":"V"},"doc":{"summary":"Adds a new <ref cls=\"org/moddingx/libx/registration/RegistryCondition\">RegistryCondition</ref> that must match each object that is passed to the system in order  to be registered.","text":"Adds a new <ref cls=\"org/moddingx/libx/registration/RegistryCondition\">RegistryCondition</ref> that must match each object that is passed to the system in order  to be registered."}},{"name":"transformer","modifiers":["public"],"typeId":"(org.moddingx.libx.registration.RegistryTransformer)void","parameters":[{"name":"transformer","type":{"name":"org.moddingx.libx.registration.RegistryTransformer","desc":"Lorg/moddingx/libx/registration/RegistryTransformer;","binaryName":"org/moddingx/libx/registration/RegistryTransformer"}}],"return":{"name":"void","desc":"V"},"doc":{"summary":"Adds a new <ref cls=\"org/moddingx/libx/registration/RegistryTransformer\">RegistryTransformer</ref> that can add additional objects that are registered with each  object registered through the LibX registration system.","text":"Adds a new <ref cls=\"org/moddingx/libx/registration/RegistryTransformer\">RegistryTransformer</ref> that can add additional objects that are registered with each  object registered through the LibX registration system."}},{"name":"build","modifiers":["public"],"typeId":"()org.moddingx.libx.registration.RegistrationBuilder.Result","parameters":[],"return":{"name":"org.moddingx.libx.registration.RegistrationBuilder.Result","desc":"Lorg/moddingx/libx/registration/RegistrationBuilder$Result;","binaryName":"org/moddingx/libx/registration/RegistrationBuilder$Result"}}],"doc":{"summary":"A registration builder is used to configure the LibX registration system and adjust the behaviour of it.","text":"A registration builder is used to configure the LibX registration system and adjust the behaviour of it."}}
