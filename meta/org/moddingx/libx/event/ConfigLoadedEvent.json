{"name":"org/moddingx/libx/event/ConfigLoadedEvent","simpleName":"ConfigLoadedEvent","sourceName":"org.moddingx.libx.event.ConfigLoadedEvent","modifiers":["public"],"superClass":{"name":"net/minecraftforge/eventbus/api/Event","signature":"net.minecraftforge.eventbus.api.Event","parameters":[]},"constructors":[{"modifiers":["public"],"typeId":"(net.minecraft.resources.ResourceLocation,java.lang.Class<?>,org.moddingx.libx.event.ConfigLoadedEvent.LoadReason,boolean,java.nio.file.Path,java.nio.file.Path)void","parameters":[{"name":"configId","type":{"name":"net.minecraft.resources.ResourceLocation","desc":"Lnet/minecraft/resources/ResourceLocation;","binaryName":"net/minecraft/resources/ResourceLocation"}},{"name":"configClass","type":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"}},{"name":"reason","type":{"name":"org.moddingx.libx.event.ConfigLoadedEvent.LoadReason","desc":"Lorg/moddingx/libx/event/ConfigLoadedEvent$LoadReason;","binaryName":"org/moddingx/libx/event/ConfigLoadedEvent$LoadReason"}},{"name":"clientConfig","type":{"name":"boolean","desc":"Z"}},{"name":"configPath","type":{"name":"java.nio.file.Path","desc":"Ljava/nio/file/Path;","binaryName":"java/nio/file/Path"}},{"name":"currentPath","type":{"name":"java.nio.file.Path","desc":"Ljava/nio/file/Path;","binaryName":"java/nio/file/Path"}}],"return":{"name":"void","desc":"V"}}],"methods":[{"name":"getConfigId","modifiers":["public"],"typeId":"()net.minecraft.resources.ResourceLocation","parameters":[],"return":{"name":"net.minecraft.resources.ResourceLocation","desc":"Lnet/minecraft/resources/ResourceLocation;","binaryName":"net/minecraft/resources/ResourceLocation"},"doc":{"summary":"Gets the id of the config that was loaded.","text":"Gets the id of the config that was loaded."}},{"name":"getConfigClass","modifiers":["public"],"typeId":"()java.lang.Class<?>","parameters":[],"return":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"},"doc":{"summary":"Gets the class of the config that was loaded.","text":"Gets the class of the config that was loaded."}},{"name":"getReason","modifiers":["public"],"typeId":"()org.moddingx.libx.event.ConfigLoadedEvent.LoadReason","parameters":[],"return":{"name":"org.moddingx.libx.event.ConfigLoadedEvent.LoadReason","desc":"Lorg/moddingx/libx/event/ConfigLoadedEvent$LoadReason;","binaryName":"org/moddingx/libx/event/ConfigLoadedEvent$LoadReason"},"doc":{"summary":"Gets the reason why the config was loaded","text":"Gets the reason why the config was loaded"}},{"name":"isClientConfig","modifiers":["public"],"typeId":"()boolean","parameters":[],"return":{"name":"boolean","desc":"Z"},"doc":{"summary":"Gets whether the config is a client config.","text":"Gets whether the config is a client config."}},{"name":"getConfigPath","modifiers":["public"],"typeId":"()java.nio.file.Path","parameters":[],"return":{"name":"java.nio.file.Path","desc":"Ljava/nio/file/Path;","binaryName":"java/nio/file/Path"},"doc":{"summary":"Gets the path where the config is stored by default.","text":"Gets the path where the config is stored by default."}},{"name":"getCurrentPath","modifiers":["public"],"typeId":"()java.nio.file.Path","parameters":[],"return":{"name":"java.nio.file.Path","desc":"Ljava/nio/file/Path;","binaryName":"java/nio/file/Path"},"doc":{"summary":"Gets the path where the config is loaded from for this event.","text":"Gets the path where the config is loaded from for this event. For example  configs can be loaded per world. In that case <code>currentPath</code>  will be the path from the world and <ref cls=\"org/moddingx/libx/event/ConfigLoadedEvent\" method=\"getConfigPath\" type=\"()java.nio.file.Path\">configPath</ref> will be the  default path for the config which might still be used for values not present in the<br> world specific config.  <br> The value is <code>null</code> when the current config is loaded from a non-file location  (for example on shadowing). It can also be the same as <ref cls=\"org/moddingx/libx/event/ConfigLoadedEvent\" method=\"getConfigPath\" type=\"()java.nio.file.Path\">configPath</ref>  when the config is loaded from the default path."}}],"doc":{"summary":"Fired whenever a <ref cls=\"org/moddingx/libx/config/ConfigManager\">LibX config</ref> is loaded.","text":"Fired whenever a <ref cls=\"org/moddingx/libx/config/ConfigManager\">LibX config</ref> is loaded. Is fired on both client and server.  The event is not cancelable."}}
