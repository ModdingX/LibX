{"name":"org/moddingx/libx/datagen/provider/patchouli/page/Content","simpleName":"Content","sourceName":"org.moddingx.libx.datagen.provider.patchouli.page.Content","modifiers":["public","abstract"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"fields":[{"name":"EMPTY","modifiers":["public","static","final"],"type":{"name":"org.moddingx.libx.datagen.provider.patchouli.page.Content","desc":"Lorg/moddingx/libx/datagen/provider/patchouli/page/Content;","binaryName":"org/moddingx/libx/datagen/provider/patchouli/page/Content"},"doc":{"summary":"An empty content that does nothing.","text":"An empty content that does nothing."}}],"methods":[{"name":"pages","modifiers":["public","abstract"],"typeId":"(org.moddingx.libx.datagen.provider.patchouli.page.PageBuilder)void","parameters":[{"name":"builder","type":{"name":"org.moddingx.libx.datagen.provider.patchouli.page.PageBuilder","desc":"Lorg/moddingx/libx/datagen/provider/patchouli/page/PageBuilder;","binaryName":"org/moddingx/libx/datagen/provider/patchouli/page/PageBuilder"}}],"return":{"name":"void","desc":"V"},"doc":{"summary":"Generates some pages for this content.","text":"Generates some pages for this content."}},{"name":"with","modifiers":["public","default"],"typeId":"(org.moddingx.libx.datagen.provider.patchouli.page.Content)org.moddingx.libx.datagen.provider.patchouli.page.Content","parameters":[{"name":"next","type":{"name":"org.moddingx.libx.datagen.provider.patchouli.page.Content","desc":"Lorg/moddingx/libx/datagen/provider/patchouli/page/Content;","binaryName":"org/moddingx/libx/datagen/provider/patchouli/page/Content"}}],"return":{"name":"org.moddingx.libx.datagen.provider.patchouli.page.Content","desc":"Lorg/moddingx/libx/datagen/provider/patchouli/page/Content;","binaryName":"org/moddingx/libx/datagen/provider/patchouli/page/Content"},"doc":{"summary":"Chains a new content with this one.","text":"Chains a new content with this one. The default implementation returns a content, that just calls  both <ref cls=\"org/moddingx/libx/datagen/provider/patchouli/page/Content\" method=\"pages\" type=\"(org.moddingx.libx.datagen.provider.patchouli.page.PageBuilder)void\">#pages(PageBuilder)</ref> methods after each other."}}],"doc":{"summary":"Defines some content for a <ref cls=\"org/moddingx/libx/datagen/provider/patchouli/EntryBuilder\">patchouli book entry</ref>.","text":"Defines some content for a <ref cls=\"org/moddingx/libx/datagen/provider/patchouli/EntryBuilder\">patchouli book entry</ref>.  A content is something that can create zero, one or multiple actual book pages, when built.<br> Each book entry will only ever have one single <ref cls=\"org/moddingx/libx/datagen/provider/patchouli/page/Content\">Content</ref>. When new content is added to the entry,  it is chained to the previous content using <ref cls=\"org/moddingx/libx/datagen/provider/patchouli/page/Content\" method=\"with\" type=\"(org.moddingx.libx.datagen.provider.patchouli.page.Content)org.moddingx.libx.datagen.provider.patchouli.page.Content\">#with(Content)</ref>.  Subclasses may override this to allow for content to merge on the same page. For example, when a recipe<br> content is merged with some caption content, both of them will result in a single content that adds a  recipe page with text."}}
