{"name":"org/moddingx/libx/util/ClassUtil","simpleName":"ClassUtil","sourceName":"org.moddingx.libx.util.ClassUtil","modifiers":["public"],"superClass":{"name":"java/lang/Object","signature":"java.lang.Object","parameters":[]},"constructors":[{"modifiers":["public"],"typeId":"()void","parameters":[],"return":{"name":"void","desc":"V"}}],"methods":[{"name":"boxed","modifiers":["public","static"],"typeId":"(java.lang.Class<?>)java.lang.Class<?>","parameters":[{"name":"cls","type":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"}}],"return":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"},"doc":{"summary":"Returns the given class unless it's a primitive class in which  case the boxed class for that primitive is returned.","text":"Returns the given class unless it's a primitive class in which  case the boxed class for that primitive is returned."}},{"name":"unboxed","modifiers":["public","static"],"typeId":"(java.lang.Class<?>)java.lang.Class<?>","parameters":[{"name":"cls","type":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"}}],"return":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"},"doc":{"summary":"Returns the given class unless it's a boxed primitive class in which  case the primitive class for that boxed class is returned.","text":"Returns the given class unless it's a boxed primitive class in which  case the primitive class for that boxed class is returned."}},{"name":"forName","modifiers":["public","static"],"typeId":"(java.lang.String)java.lang.Class<?>","parameters":[{"name":"cls","type":{"name":"java.lang.String","desc":"Ljava/lang/String;","binaryName":"java/lang/String"}}],"return":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"},"doc":{"summary":"Same as <ref cls=\"java/lang/Class\" method=\"forName\" type=\"(java.lang.String)java.lang.Class<?>\">Class#forName(String)</ref> but instead of throwing a <ref cls=\"java/lang/ClassNotFoundException\">ClassNotFoundException</ref>,  returns <code>null</code>.","text":"Same as <ref cls=\"java/lang/Class\" method=\"forName\" type=\"(java.lang.String)java.lang.Class<?>\">Class#forName(String)</ref> but instead of throwing a <ref cls=\"java/lang/ClassNotFoundException\">ClassNotFoundException</ref>,  returns <code>null</code>."}},{"name":"callerClass","modifiers":["public","static"],"typeId":"(int)java.lang.Class<?>","parameters":[{"name":"level","type":{"name":"int","desc":"I"},"doc":"How many stack frames this should go up. <code>0</code> means the method that               called <ref cls=\"org/moddingx/libx/util/ClassUtil\" method=\"callerClass\" type=\"(int)java.lang.Class<?>\">#callerClass(int)</ref>. <code>1</code> is the class that called the               method from which <ref cls=\"org/moddingx/libx/util/ClassUtil\" method=\"callerClass\" type=\"(int)java.lang.Class<?>\">#callerClass(int)</ref> was invoked."}],"return":{"name":"java.lang.Class<?>","desc":"Ljava/lang/Class;","binaryName":"java/lang/Class"},"doc":{"summary":"Gets the caller class for method call, the given amount of stack frames up.","text":"Gets the caller class for method call, the given amount of stack frames up. This skips  reflection frames."}}],"doc":{"summary":"Utilities for instances of the <ref cls=\"java/lang/Class\">Class</ref> class.","text":"Utilities for instances of the <ref cls=\"java/lang/Class\">Class</ref> class."}}
